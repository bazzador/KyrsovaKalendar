<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAA4QAAAM9BAMAAAA2paC1AAAABGdBTUEAALGPC/xhBQAAABJQTFRF5ubm
        ////AAAAfHx8SUlJs7Oz5iIDnAAAGcJJREFUeNrtnUt/m7raR6Ve5minntuA5yE5mcdJOg9J+/2/yolj
        3NbYxlwe6ZHwWrvvL/u/z2tDtCp0BYzbkZkd2tFmWfZ+//Lycv9g4zmrqGNkp+XM16d8T/mQuXRLNliM
        7LS+/xX4KfHVJVuywWJcp/U1b3PrZlLQ/mJUp7V4OlKYv2YGZ50xptPK7o4N5mWd4awzxnRab/kpCouz
        zhjRaX3LT/Mzw1lXjOe0Fvk5Kpx1xWhOK3s6q7DIZlDQ/mI0p/WWn6eaQUH7i5Gch/3RYTAvZlDQ/mIc
        52G/551U6Re0vxjHeZwcER5XQ5ydilGcR2dD+Ek9t3IXjHts899V4tdLBvNlpn6SsUfV81g8XVRYunmW
        +1wU3uWXqedZ7jNR+KuHwd2VFGcdUfE8bvoYzAsURqswe+qlMLcGZ51R7cC9GsItG4Ozzqh1YPutp8HP
        xhBnHVHpwHbR12BeojBKhX0bwi0ojFHh5Ym1f6hx1hlVDmy/DjC47c/grCNqHHhAQ7hlhbPOqHHg7G6Q
        wnWGs66ocGD7a5DBbZcUZydj8zP8otdNPhAWCE9HtQMvhhrMLc5ORq0DD2wIt9Q4OxmVDmy/DDaYVzg7
        GXUOPGxEiMLOqHPgIRNrf9jg7GRUOXD2lqNQLGocuP8K0wErnJ2MCge2i1EGqYXxKBwxnqAWdsTwB3Zv
        OQqTVjh8Ym0PF9LTMfiBF2MNUgtjUXiXUwtN0gq/5CgUjnvCrHLZm/EG84oFwq4Y6EijJtb21DjrimGO
        NHo8gcLLMciRRq1P/IWNF50xxJHsYspllL0zESjM7qYY3N6ehrOOGOBIQ3estVnirDMGONLNNINsBVZX
        OK0hzNmQr6/wbqLB/BVnndH7kb5NNcjNacoKF5MNcouorsLsabLCNQpVFb5NNrjtkOKsK/o90tfpBvPK
        4OxMbH56XNayCwGDuXUsEJ6OAY6U3UkovCorg6L/I7lfEgaLq7IyKPo/0o2EwXx5VVYGRe9HEhhPbNlc
        lZVB0fuRRBrC5snOODsVfR/pm4zBzw4pzk5Gz0daCBksrsvKoOj3SEINYZ6vr8vKoOj3SG9CBne9GZyd
        jF6P9FXKYPO6GJydij6PtHgSU2ivWlJ39HmkOzGD5ZVZGRT9fbX9JWaw6c3g7GT09tX2Rs5g05vB2cm4
        R3wdK3sSVFh5OkmWfLvinaDBz5dUGJx1RvGv/iZpsMyu04qqwoWkwc+tT9doRVXhk6jC1ZVa0VT4Jmpw
        35vBWVeU/eobWYM5knpE0a9eyF5Gm1eIGpx1Rsnvkh1P5Nu5mSu1oqVQcmJtxwpJPaLcd1nphnC7b+ZK
        rSgpzJ7EFSKpTxT7LunxRP650oSky1Hqu+wPcYPbXcBIuhylvmshb3C70oSkrtj8FFrHuvOgsGaBsDPK
        fvWbB4PbuZkrl9QdRb/6xofBAkndUfC7xCfWdmzfhn7lkrqj4Hd5aQjz/BFJ3VHuu+w3Lwa3vRmcdUWx
        77I3fgx+7pu5ckndUey7sic/BosMSd1R6rvsmx+Du30zVy6pOwp9l4+JtR0bJIVRmPky+NmbwVlXlPku
        T+OJD0okBVHoazyRN70ZnHVFie9y370ZbHYBX7mk7ijyXU/+FG6QdFFhw4SFK/fmz+DueTMsEPaIEz7s
        sSHMd0/PQ1KfOOHDC4+X0eZ5M0jqEcd/2N94YssKSc63QvmNvwdskOQ8K/S2PtFQI8l5VuhzPLEFSb3j
        yA9nb34NrpHUO477sN/xRP6nN4OkHnHchxeeDTaPXkNSnzjqw9mdb4VI6h9HffjNt8Hm0WtI6hPHfPjG
        t8E/vRkk9YgjPrx48q5w6ZDUO474sPeG8KM3g6Q+sfk5dKXK+3hii2VFsEcc++FFAIMlkvrEkR92TwEU
        rpHUJ477sH0LYDB/RFKfOOrDAcYTWyok9YmjPrx4CqKwRlKfOOrDd0EMlkjqFcd8+FsQg9u5GST1iCM+
        HKYh/JybQVKPOPzD2VMghRWSesXhH34LZHC7bwZJPeLgD/8IZbBEkh+Fi1AG97uA/yXLcDZd4V0ejvLl
        5eX5/v7+/eHh95bX139OSRO742802cc/TYpd4Zc8Xsr86aXF/55bf7Z/IybxsOX99+ef9/ffu79aB2XV
        wv+VY0+/pamvOfSi/Lx+fNj9U1e9v7Oo3/93sPHErChfnh9ePytPpq/wLYfRvDx81EnndBV+y2ES5fPv
        WlXhIofJlA+vegqzuxwEKJ9rLYU0hFKUP3UU3uQgRlm58AoZT8jyvBuZh1RIQyhM+fkao4AKGU/I8/Oj
        IgZTaBlP+KB8dcEU0hB64jaUQsYT3ni2QRRa1if8UQpM1jQ/O5amFlxGPVI+OON9yZfxhF9+Ot8KGU/4
        5tn5VcjEmn8K61Mh44kQ7B16Uch4Igil9aXQ/sghCIUvhVkOgSj8KGShPiCFD4WsTwSlkFdov+cQkp/i
        ChlPhOank1XIeCI8PzNJhaxPaFBlggpZn9CgrLPhChvY7xQHu2mac1K6IvudYqGQUsh+JzUeZRQ6GkI9
        KgmFjCdUsdMVWpZ5VSkmK7SMJ5R5zCYqZDyhzm02SSHjCX3KeopCGsIY+JlNUMj6RBR8XkrHKbSMJ6Kg
        tKMVchmNhHU2UiETa9Fwm41TyHgiGko35s4mxhMxsRyx5Mv92HFRD1fIttG4KNxQhVxGY2OTDVPItEx0
        lHaYQqZl4mOZDVHItEyM1AMU8tjtKFlnA2ohl9Eoqfor5DIaJ0XWVyGD+ljZbtHvpZBBfayUrp9ChoTx
        ssl6KaQSxkvp+iikEsbMY3ZB4QeM6qOm7LHky6NJ4mZzeWcwKxRxs6+G5xVaOjORs7m0uZthfew01fC8
        Qq6j0bPpVkh/NH6K7v35rFEkQNWpkKYwAYrOWyxoClOg7lBIU5gEnbdYMCpMAttRC3NIgcfzd8kwQZoG
        HXfJsNCUCNVZhTwDPxGKs+uF/+WQBududDJfckiD5TmFDAuT4cy9agwL02FzRiGT3MlQZChMnRqFqXP6
        dkOTQzI0d/2iMGEqFKbOyTtGUZgUFoWps6FHmjrrDIWpU6MwdTYn1guZI02K4oRCVirSwqIwdTbHClm1
        T4sChclj2f6UOpsjhdwVkxgFW4GTx7YVMrZPjc2RQkYVibFuP8PEspE0Mcqjx9Bwi2hqVG2FdElTY3n0
        GBr6M4lRtBTyTOf0qA/XC51jfiY1Nm2FNIapsW4rdDSGiVEeKWRkmBp1WyFX0tRYtRXydPXUKI4U0idN
        jSOFdGhSozpSyDxpYqyOFPJM0sQojhTyspHUOFbofuWQEtWJV1AysEiK1YkXwS5oDlOiOHxn027xieYw
        KY6eMLvNjCxSojqlkLXflFidVMgkTUIU2UmFLFmkQ3laIV2ahKhPK2SEnw6bMwpZOkyGtTujkFmaVCjO
        KbTM0iRCee5CauzXHJKgPqfQWGZp0mBzVqFhliYNlucV8l7RNCg6FFpmaVKg3CvbDyYOlg+ZpUmB+nDJ
        t/UyGbo0CXDbqZBZmgRYZl0KM2Zp4mfdrZBZmvgpuxUyS5MApluhoUsTPfUFhSZjliZyVpcUGrqlkbO8
        qJCnJEZOkV1UaJmliZvLCll4ipzLF1IWniKn6qOQLk3MrHopZPEwYpouadPqNe6OIjNtEVP8o+y8Qmba
        Iqbsp9CwxTtebD+FdEvjpeqp0LB4GCubvgp5fnes9FfITFukrPsrZPEwTooBCnW6NOXLB/d7fj/8/ofX
        7/tz//tvrbM/oP2Mj3/5/vdffnfwvuX+FP/7+L/nHS+HeC6gIQpVZtpW7jyZtZnb/vn4t9Y5Z/1+o7/x
        z1dZc+ZoH/+TG4XnJsgOUagxS1MM0BBr9DszUg9RqLLFewYKnVeH1SCFTmGmrZ6BQq9dwYEKFWbaNnNQ
        6LPcHgcqDL+nbTkLhR678x8FdHG98N9ogy8elj12h8QfPZbbdlP+sNMKPtNm56DQ4x2bxWCFwbul1SwU
        GuvrPRIjFIaeaVvOQ6GxnmZGyjGnFXaWZrfbNX2F3hZ77IjTCtulKc1MFPq6fNVjTivsTFs9F4We/uqP
        Uhi2S/M4F4We3ow1TmHQmbbPu5FnodBPL6Iad1ohZ9pKMxuFXq5ejyNPK+R+KDsbhV6efT5WYciZttv5
        KPTRGi6zkacV8Blf26erzESh81A867EKA+5pK2ak0MOLr0fXQhPw7lE7H4Ue/t7vHwE1akks1OJhlf56
        4T5a+S7E2k1QGGq2dDUjhf+Jl04xSWGgmbZiPgo9THZPUxhqpm1GCuXXnMppCgPdPVrPSKF4n3SiwkB3
        j67mo9DDlXSiwjDPaVvPSKH8A7WmKrRBZktnpFC+MZyqMMzdo/WMFIo3htMVhphp28xIofhU93SFIWba
        9g+hnoNC8b/xdrpCY713acoZKRTvz0goDPDo2Xo+CsXXfWsJhf4XgDcoPIuMQu+3WjSN4SwUSl+yKpkl
        Md8zbYXEScYRxXsOQgq9z7TZ2Sg00gNDKYW+Z9qq+SiUXjIUU+j5OW3L+SiUHttvxM7Sb7d0jcJzbATP
        0meXZvcG8FkolJ6ekVTo9e7RejYKpQdgG9Gz9Nil2aDwDCvZs/TXpVnPRqERLhlhhf72tJUoPIOwQo8O
        7VwUWuGCkVbo7+7RDQpPI67QW7d0icLTyCv01S0tZ6NQuK1ZejhLT91Si8KTNG+DFV0S8zTTVs1kvVD6
        r7gPhZ7uAF6h8Fy5eDhLL/sSiwyFp/Cj0E+3FIUnWfpR6KVLU81EoXCX3ZdCH12aDQpP4Uuhj5m2dYbC
        E3hT6KFLU85EofD+p7U3hR5mS2sUnsCjQvl9iRsUnsCnQvF9iWuHwhOl4lGh+ExbMQ+FwhtJvSqUnmkr
        LQqP8apQ/H7IGoXH+FUofQfwBoXHrH2vkIl2afY3bHs+Z88xNYWis6WFQeER/hWKdkstCo/wr9DdCDqs
        UHhEAIWSM20rFB5RBDhpwQXgpj+Dwn/LJMRJy820lSg8oghy0nLdUovCNmEUyt0BXKGwTRHod5CaLV2h
        sE0ohVIPANz1Z1D4D6EUGiuzAFyisE0whVJdmhkoFH7kRTiFQgvANQpbBFQosy9xg8IW+7n/EAtm9rvA
        Ca88n2SAmLBCIzFbukZhizKkQonnJZYobBG0FhqJhwuhsEXYWijxvESLwkNCK5w+W1qh8JDQCs3kBwFu
        UHhIeIVTZ0tR2EJB4cRu6QqFh2gonDZbukThISoKJ3VL1yg8REXhpNlSFLbQUTjl7TLpKxS+V0hJ4YTZ
        0sJRCw/QUjh+bym1sEWptX42em/pdveM0jkLxbkoNGNfAofCFooKR86WLg0KD1BUOLJN2KDwEE2F47o0
        KGyhqnDUbGmFwkN0FY6ZLbUobKH7Kw2fLf3czo3Cf0tE+VcaPFtaoLCFtsLBs6Urg8IW2r/S0NnSCoUt
        1Gvh0DvxDQpb6CscNls6h5vT5nYh/YhDhhZLFLYpY/gNB8yWzuFee/Fa2KC6nNa/W2r1TtKxat8V+/5W
        hUPhEXEo7DtbukLhEZHUwr4OaxQeE4vCXrOlhUNhvAptH4cbFB4TzYXU2B4z3jUKTxCNwh6vRJjJq0bm
        q/Dy4/Qri8K4FZoLM95FhsITlDEpNLazSzOXt4jOuRaazv3Bs3kd87wVdnVLZ/Ne+3kr7HD4M0NhGgrP
        bcQorUHhGYXNEaJZTnPvJ8+zjuokJ8XZKzz9oLbblJ1dncJTm2lu05J09QqPH9T2mpgkFLZWLQqTJSYJ
        hQf1sLz9+I+JSeqO16HQuMX7y0tZvtzXn/8pMUnd8VoUuoP/ELuVQfG6FM4yotCgEIXKEYUGhShUjig0
        KEShcpz9euH8IwodClGoHFHoUIhC5YhCh0IUKkcUOhSiUDmi0KEQhcoRhcnHHyikFqJQOaLQcSFtKWyO
        wDJesMiSr0EhCpUjF1KDQhQqRxQaFKJQOaLQoBCFyhGFBoUoVI4oNChEoXJEoUEhCpUjq/aO9UIUKkcU
        OhSiUDmi0KEQhcoRhQ6FKFSOKHQoRKFyRKFDIQqVIwodClGoHFHoUNhS2ByBZbxgEYUGhShUjig0KESh
        ckShQSEKlSMKDQpRqBxRaFCIQuWIQoNCFCpHFBoUolA5sl7oWC9EoXJEoUMhCpUjCh0KUagcUehQiELl
        +B8KqYUoVI7UQkctRKFypBY6aiEKlSO10FELWwqbI7CMFyz+h0IUolA5otCgEIXKEYUGhShUjsIKS0o2
        eKQWGhSiUDmi0KDwANrC8JFaaFCIQuWIQoPCA8rmACzjhYss+ToUolA5ciF1KDzEULKhIwodCg/gQho+
        UgsdCg+gFoaP1EKHwgOoheEjtdCh8ABqYfhILXQoPIBaGD6yXmhYLzyAvTPhI7XQoPAAamH4SC00KDyA
        Whg+otCg8BBKNnikFhoUolA5otCgEIXKEYUGhShUjig0KGwpbGAZL1hEoUMhCpUjCh0KUagcUehQiELl
        iEKHQhQqRxQ6FKJQOaLQofCAwlCyoSO10KHwAGph+Mh6oWG98ICCkg0eUWhQiELliEKDQhQqRxQaFKJQ
        OaLQoBCFyhGFBoUoVI4oNChEoXJEoUFhS2EDy3jBIgodClGoHFHoUIhC5YhCh8ID1oaSDR2/yCqkFoaP
        1EJHLTyAWhg+UgsdtRCFyhGFDoUoVI4odChsKWyOwDJesIhCg0IU6kaLQkMtRKFyFFa4pGSDRxQa2kIU
        KkcUGhSiUDmi0NAWolA5otCg8IAVJRs8otCgsKWwgWW8YBGFDoUoVI4odChEoXJEoUMhCpUjCpOPbyik
        FqJQOVILHbUQhcqRWuiohShUjtRCh8KWwuYILOOFilZY4SMlGzpKK9xQsqGjvUNh6gpzFCYeb1CYevyC
        wsSjdFOYV5Rs4LjIUZh4vEFh4lF6bgaF4RU+oTDxKN4U5jUlGzb+QGHqUbwpzC0lGzbmHhQ2sIwXJN7I
        K9wfiIIOEu0bChOPVt5gicKg8QaFiUcf19EChSFjJm8wX6MwYLT/eVC4RGHAKD8/isKw0f7IUZh2dHc+
        FG5QGCz6qYR5hcJg0UtLmOc1CkNF+y1HYdpx4cdgblEYKt75MVhuL9E7WNXzGqXvC/1DkVHQQaK9yVGY
        dLS+GsI8X6MwRLSLJxQmHe3izpvB/JGC9h9t5tFgXlHQ/qNXg3lNQXuPzqvBa1NoTfZ33+wHbvuPJ/ZH
        N34NljGUrN3hfJJ9qPtQti/V1x2/D3m/3/K++/GXl5PsuphPuTZlpq/QfT8sx4bDYvzfy/PL9k+LHIoI
        FH7LYQJrfYUYnMbGaCv8lcMktBVmGJxKbf6isJck+18OE7F/C1ZhI8LiLoeJlE5TYYbB6RSqCjEowFJT
        IT0ZCVaKCm9yEKDSU7jIQYJaTyENoQxOTeGPHCQo1BRm+os082CtpvAtBxFWWgrpjUpRaSmkLyOFVVJI
        JRTDKSmkEkpRNAXbFHCw9UIqoRirLJCzVqQSirExKgqphHLUOgoZE8phVRQyvy1HYVQUfslBirXOrkNm
        R+V4VKmFdGYEqVUU0pkRxGoozHIQo8g0FHIdFWStopDrqCAbFYU5yFFrKOQ6KkjpNBQyrhek+KuwIcB6
        oWVcL8iqXc4hFDI/KkmlofC/HOTIFBRahhSCFCoKaQoFWRoFhTSFklQaCrmRQhKjoZCmUJDtHHd4hTSF
        gqw0aiELTZJUGgqZIJUk01BIb0aQtYpCejOCLA0KE6dWUUiHVI7ysJybn97XC1Eox/qgnIMpzEGMjYpC
        ZkgFsShMnMKpKGRkL8cShalTozBxSofCxFkrKWSKVIwKhamTKSnktTBSrFGYOhujo9CiUAprqIVps85Q
        mDjVUTnv8b1eiEIh7LlyRmEirB0KE6dCYeKUFoWJs3YoTJwKhYlTOhQmzhKFqVOjMHEKh8LE2aAwdayq
        Qh7eNZ2lQ2Hi1ChMnKYzc1zOzU9W7aNnc6acWfJNBqurkFo4maWjFiZOra2Q7sxECkctTJxKWyFt4URK
        Ry1MnA0KU8ehMHGW+gppC6dhqYWJs3QoTByLwsRZOxQmTt2tsIGNF/Gyf9lkdzl7V8jjEsZTGxSmzdqh
        MHFqFCbO2kWikAd4jcWiMHGWDoWJY6NRyFOBx7FxKEyb0qEwcaqIFPLitDEULiKFvC1mDHVUCu9yGMra
        oTBtyp7l3Pz0vV7IW+2Hs+lXzqEU8nDuwRQuMoVMzwyljk0ho4qBLF1sCi2jikEULjqF3J42jCpChfRn
        hvDTRaiQWdIB7IaEsSlkim0AtYtSIY1hbx5dnAppDPtSuEgVMjLsyZ+50egU0hj25DaLViGNYS8eMxOt
        QoYVfSiygQW7x/t64TZyJb1MaUeWcxCFlivpZSoXs0IWnC7z6OJWmHElvcBPF7lCrqQXeHaxK+RK2k1h
        41do2cfWQbF/fnrUCnlqwnnK1yyBWsgOmvN8GDQpKKRDc5YPg0koZO3+HFuDaShkV/dpbjOTikLGFSep
        M5OOQqrhMWWdmZQU0hq2KetpBdv8DLFeuItUwxZFnU0q2PAK6ZQe8mwzk5pCpmj+5eHzbVqJKTTc8fuH
        8tZOLlgNhfRo9hTGmSQV8pjnhp8iBaujkEvplluXsEK2YDTruwkrtFc/z3YrVrBKCq/d4bN1ySs01/za
        g+c/OyzSVuh+5dfJ863LzDwUuvf8Cnn+/TlPPROF1+ewfHhtFhrmotB9za+J51froyT3hFsv/DdekcPn
        V7MV6K9glRTO32H58vJy//DbuGY2dH4K9xeFhva14Q/fv7/+/vPnHO/3D80/7w/353mZyMkv/Tjq/jS+
        v+5+zd1vGqwk1RQSJ0bn/g/GmrN15/s+zgAAAABJRU5ErkJggg==
</value>
  </data>
</root>